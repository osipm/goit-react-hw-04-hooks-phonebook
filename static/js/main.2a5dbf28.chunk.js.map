{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","s","form","label","type","pattern","title","onChange","required","btn","Component","ContactList","contacts","handleDelete","contactsList","map","id","item","onClick","Filter","filter","onHandleChange","App","addContact","prevState","find","contact","v4","alert","handleFilterContacts","getFilteredContacts","normaziledFilter","toLowerCase","includes","handleDeleteContact","contactId","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","filteredContacts","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.2a5dbf28.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__fklZa\"};","import React, { Component } from 'react';\nimport s from './ContactForm.module.css';\nimport { PropTypes } from 'prop-types';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label className={s.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя\"\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n        <label className={s.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона\"\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n        <button className={s.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\nexport default ContactForm;\n","import { PropTypes } from 'prop-types';\nimport s from './ContactList.module.css';\nfunction ContactList({ contacts, handleDelete }) {\n  const contactsList = contacts.map(({ id, name, number }) => (\n    <li key={id} className={s.item}>\n      <div>\n        <span>\n          {name}: {number}\n        </span>\n        <button\n          className={s.btn}\n          id={id}\n          type=\"button\"\n          onClick={() => handleDelete(id)}\n        >\n          Delete\n        </button>\n      </div>\n    </li>\n  ));\n\n  return <ul>{contactsList}</ul>;\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import { PropTypes } from 'prop-types';\nimport s from './Filter.module.css';\nfunction Filter({ filter, onHandleChange }) {\n  return (\n    <label className={s.label}>\n      Find contacts by name:\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onHandleChange}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onHandleChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport { v4 } from 'uuid';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  addContact = ({ name, number }) => {\n    this.setState(prevState => {\n      if (prevState.contacts.find(contact => contact.name === name)) {\n        alert(`${name} is already in the contacts`);\n        return;\n      }\n\n      return {\n        contacts: [\n          ...prevState.contacts,\n          {\n            name,\n            number,\n            id: v4(),\n          },\n        ],\n      };\n    });\n  };\n\n  handleFilterContacts = e => {\n    return this.setState({ filter: e.currentTarget.value });\n  };\n\n  getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n    const normaziledFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normaziledFilter),\n    );\n  };\n\n  handleDeleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  componentDidMount() {\n    const contacts = JSON.parse(localStorage.getItem('contacts'));\n\n    if (contacts) {\n      this.setState({ contacts: contacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredContacts = this.getFilteredContacts(contacts, filter);\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n\n        <h2>Contacts</h2>\n        <Filter filter={filter} onHandleChange={this.handleFilterContacts} />\n        <ContactList\n          contacts={filteredContacts}\n          handleDelete={this.handleDeleteContact}\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__4Iavj\",\"label\":\"ContactForm_label__3IJt_\",\"btn\":\"ContactForm_btn__YOADv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactList_btn__2ijn6\",\"item\":\"ContactList_item__LRnuT\"};"],"sourceRoot":""}